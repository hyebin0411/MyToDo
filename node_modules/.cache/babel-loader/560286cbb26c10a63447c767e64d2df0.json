{"ast":null,"code":"import Control from \"./TodoCalendarControl.vue\";\nexport default {\n  components: {\n    Control\n  },\n\n  data() {\n    return {\n      days: [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"],\n      months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n      dates: [],\n      currentYear: 0,\n      currentMonth: 0,\n      year: 0,\n      month: 0,\n      currentDate: new Date().getDate(),\n      prevDate: [],\n      previewDate: []\n    };\n  },\n\n  computed: {\n    monthToString: function () {\n      return this.months[this.month - 1];\n    },\n    isCurrentDate: function () {\n      let status = false;\n\n      if (this.currentYear === 0 && this.currentMonth === 0) {\n        status = true;\n      } else {\n        status = this.currentYear === new Date().getFullYear() && this.currentMonth === new Date().getMonth() + 1;\n      }\n\n      return status;\n    }\n  },\n\n  created() {\n    this.init();\n  },\n\n  methods: {\n    init(param) {\n      if (param) {\n        this.year = param[0];\n        this.month = param[1];\n        this.calendarDate();\n      } else {\n        const date = new Date();\n        this.year = date.getFullYear();\n        this.month = date.getMonth() + 1;\n        this.calendarDate();\n      }\n    },\n\n    calendarDate() {\n      const [monthFirstDay, monthLastDate, prevMonthLastDate] = this.getFirstDayLastDate(this.year, this.month);\n      this.dates = this.getDaysOfMonth(monthFirstDay, monthLastDate, prevMonthLastDate);\n    },\n\n    getFirstDayLastDate(year, month) {\n      const firstDay = new Date(year, month - 1, 1).getDay();\n      const lastDate = new Date(year, month, 0).getDate();\n      let lastMonth = month - 1;\n\n      if (month === 1) {\n        lastMonth = 12;\n        year -= 1;\n      }\n\n      const prevLastDate = new Date(year, lastMonth, 0).getDate();\n      return [firstDay, lastDate, prevLastDate];\n    },\n\n    getDaysOfMonth(monthFirstDay, monthLastDate, prevMonthLastDate) {\n      let day = 1;\n      let prevDay = prevMonthLastDate - monthFirstDay + 1;\n      let dates = [];\n      let daysOfWeek = [];\n\n      while (day <= monthLastDate) {\n        if (day === 1) {\n          this.getPrevDates(monthFirstDay, daysOfWeek, prevDay);\n          this.padDates(daysOfWeek);\n        }\n\n        if (daysOfWeek.length === 7) {\n          dates.push(daysOfWeek);\n          day = daysOfWeek[daysOfWeek.length - 1];\n          daysOfWeek = [];\n        } else if (daysOfWeek.length < 7 && daysOfWeek.indexOf(monthLastDate) > -1) {\n          this.padDates(daysOfWeek);\n          dates.push(daysOfWeek);\n          break;\n        }\n\n        day++;\n\n        if (daysOfWeek.length <= 7) {\n          daysOfWeek.push(day);\n        }\n      }\n\n      return dates;\n    },\n\n    getPrevDates(monthFirstDay, daysOfWeek, prevDay) {\n      for (let j = 0; j < monthFirstDay; j++) {\n        daysOfWeek.push(prevDay);\n        this.prevDate.push(prevDay);\n        prevDay += 1;\n      }\n    },\n\n    padDates(daysOfWeek) {\n      const len = daysOfWeek.length;\n      const leftDays = 7 - len;\n\n      if (len >= 0 && len < 7) {\n        for (let i = 1; i <= leftDays; i++) {\n          daysOfWeek.push(i);\n          if (this.previewDate.length < leftDays) this.previewDate.push(i);\n        }\n      }\n    },\n\n    controlMonth(p) {\n      if (p === \"prev\") {\n        this.currentMonth = this.month - 1;\n        this.currentYear = this.year;\n\n        if (this.month === 1) {\n          this.currentMonth = 12;\n          this.currentYear = this.year -= 1;\n        }\n      } else {\n        this.currentMonth = this.month + 1;\n        this.currentYear = this.year;\n\n        if (this.month === 12) {\n          this.currentMonth = 1;\n          this.currentYear = this.year += 1;\n        }\n      }\n\n      const param = [this.currentYear, this.currentMonth];\n      this.init(param);\n    },\n\n    controlYear(p) {\n      if (p === \"prev\") {\n        this.currentYear = this.year - 1;\n      } else {\n        this.currentYear = this.year + 1;\n      }\n\n      const param = [this.currentYear, this.month];\n      this.init(param);\n    },\n\n    skipBy(p) {\n      this.currentYear = new Date().getFullYear();\n\n      if (p === \"today\") {\n        this.currentMonth = new Date().getMonth() + 1;\n      } else {\n        this.currentMonth = p + 1;\n      }\n\n      const param = [this.currentYear, this.currentMonth];\n      this.init(param);\n    },\n\n    getMatchedTodos(day) {\n      return this.$store.state.todos.filter(todo => {\n        const todoDate = new Date(todo.createdAt);\n        const isDateMatched = todoDate.getDate() === day;\n        const isMonthMatched = todoDate.getMonth() === this.month - 1;\n        const isYearMathced = todoDate.getFullYear() === this.year;\n        return isDateMatched && isMonthMatched && isYearMathced;\n      });\n    },\n\n    isPrevDates(day, idx) {\n      return this.prevDate.indexOf(day) > -1 && idx < 1 || this.previewDate.indexOf(day) > -1 && idx > 1;\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAkFA,OAAOA,OAAP,MAAoB,2BAApB;AACA,eAAe;EACXC,UAAU,EAAE;IACRD;EADQ,CADD;;EAIXE,IAAI,GAAG;IACH,OAAO;MACHC,IAAI,EAAE,CAAC,KAAD,EAAQ,KAAR,EAAe,KAAf,EAAsB,KAAtB,EAA6B,KAA7B,EAAoC,KAApC,EAA2C,KAA3C,CADH;MAEHC,MAAM,EAAE,CACR,SADQ,EAER,UAFQ,EAGR,OAHQ,EAIR,OAJQ,EAKR,KALQ,EAMR,MANQ,EAOR,MAPQ,EAQR,QARQ,EASR,WATQ,EAUR,SAVQ,EAWR,UAXQ,EAYR,UAZQ,CAFL;MAgBHC,KAAK,EAAE,EAhBJ;MAiBHC,WAAW,EAAE,CAjBV;MAkBHC,YAAY,EAAE,CAlBX;MAmBHC,IAAI,EAAE,CAnBH;MAoBHC,KAAK,EAAE,CApBJ;MAqBHC,WAAW,EAAE,IAAIC,IAAJ,GAAWC,OAAX,EArBV;MAsBHC,QAAQ,EAAE,EAtBP;MAuBHC,WAAW,EAAE;IAvBV,CAAP;EAyBH,CA9BU;;EA+BXC,QAAQ,EAAE;IACNC,aAAa,EAAE,YAAW;MACtB,OAAO,KAAKZ,MAAL,CAAY,KAAKK,KAAL,GAAa,CAAzB,CAAP;IACH,CAHK;IAINQ,aAAa,EAAE,YAAW;MACtB,IAAIC,MAAK,GAAI,KAAb;;MACA,IAAI,KAAKZ,WAAL,KAAqB,CAArB,IAA0B,KAAKC,YAAL,KAAsB,CAApD,EAAuD;QACvDW,MAAK,GAAI,IAAT;MACA,CAFA,MAEO;QACPA,MAAK,GACD,KAAKZ,WAAL,KAAqB,IAAIK,IAAJ,GAAWQ,WAAX,EAArB,IACA,KAAKZ,YAAL,KAAsB,IAAII,IAAJ,GAAWS,QAAX,KAAwB,CAFlD;MAGA;;MACA,OAAOF,MAAP;IACJ;EAdM,CA/BC;;EA+CXG,OAAO,GAAG;IACN,KAAKC,IAAL;EACH,CAjDU;;EAkDXC,OAAO,EAAE;IACLD,IAAI,CAACE,KAAD,EAAQ;MACR,IAAIA,KAAJ,EAAW;QACP,KAAKhB,IAAL,GAAYgB,KAAK,CAAC,CAAD,CAAjB;QACA,KAAKf,KAAL,GAAae,KAAK,CAAC,CAAD,CAAlB;QACA,KAAKC,YAAL;MACJ,CAJA,MAIO;QACH,MAAMC,IAAG,GAAI,IAAIf,IAAJ,EAAb;QACA,KAAKH,IAAL,GAAYkB,IAAI,CAACP,WAAL,EAAZ;QACA,KAAKV,KAAL,GAAaiB,IAAI,CAACN,QAAL,KAAkB,CAA/B;QACA,KAAKK,YAAL;MACJ;IACH,CAZI;;IAaLA,YAAY,GAAG;MACX,MAAM,CACFE,aADE,EAEFC,aAFE,EAGFC,iBAHE,IAIF,KAAKC,mBAAL,CAAyB,KAAKtB,IAA9B,EAAoC,KAAKC,KAAzC,CAJJ;MAKA,KAAKJ,KAAL,GAAa,KAAK0B,cAAL,CACTJ,aADS,EAETC,aAFS,EAGTC,iBAHS,CAAb;IAKH,CAxBI;;IAyBLC,mBAAmB,CAACtB,IAAD,EAAOC,KAAP,EAAc;MAC7B,MAAMuB,QAAO,GAAI,IAAIrB,IAAJ,CAASH,IAAT,EAAeC,KAAI,GAAI,CAAvB,EAA0B,CAA1B,EAA6BwB,MAA7B,EAAjB;MACA,MAAMC,QAAO,GAAI,IAAIvB,IAAJ,CAASH,IAAT,EAAeC,KAAf,EAAsB,CAAtB,EAAyBG,OAAzB,EAAjB;MACA,IAAIuB,SAAQ,GAAI1B,KAAI,GAAI,CAAxB;;MACA,IAAIA,KAAI,KAAM,CAAd,EAAiB;QACb0B,SAAQ,GAAI,EAAZ;QACA3B,IAAG,IAAK,CAAR;MACJ;;MACA,MAAM4B,YAAW,GAAI,IAAIzB,IAAJ,CAASH,IAAT,EAAe2B,SAAf,EAA0B,CAA1B,EAA6BvB,OAA7B,EAArB;MACA,OAAO,CAACoB,QAAD,EAAWE,QAAX,EAAqBE,YAArB,CAAP;IACH,CAnCI;;IAoCLL,cAAc,CAACJ,aAAD,EAAgBC,aAAhB,EAA+BC,iBAA/B,EAAkD;MAC5D,IAAIQ,GAAE,GAAI,CAAV;MACA,IAAIC,OAAM,GAAIT,iBAAgB,GAAIF,aAApB,GAAoC,CAAlD;MACA,IAAItB,KAAI,GAAI,EAAZ;MACA,IAAIkC,UAAS,GAAI,EAAjB;;MACA,OAAOF,GAAE,IAAKT,aAAd,EAA6B;QACzB,IAAIS,GAAE,KAAM,CAAZ,EAAe;UACX,KAAKG,YAAL,CAAkBb,aAAlB,EAAiCY,UAAjC,EAA6CD,OAA7C;UACA,KAAKG,QAAL,CAAcF,UAAd;QACJ;;QACA,IAAIA,UAAU,CAACG,MAAX,KAAsB,CAA1B,EAA6B;UACzBrC,KAAK,CAACsC,IAAN,CAAWJ,UAAX;UACAF,GAAE,GAAIE,UAAU,CAACA,UAAU,CAACG,MAAX,GAAoB,CAArB,CAAhB;UACAH,UAAS,GAAI,EAAb;QACJ,CAJA,MAIO,IACHA,UAAU,CAACG,MAAX,GAAoB,CAApB,IACAH,UAAU,CAACK,OAAX,CAAmBhB,aAAnB,IAAoC,CAAC,CAFlC,EAGL;UACE,KAAKa,QAAL,CAAcF,UAAd;UACAlC,KAAK,CAACsC,IAAN,CAAWJ,UAAX;UACA;QACJ;;QACAF,GAAG;;QACH,IAAIE,UAAU,CAACG,MAAX,IAAqB,CAAzB,EAA4B;UACxBH,UAAU,CAACI,IAAX,CAAgBN,GAAhB;QACJ;MACJ;;MACA,OAAOhC,KAAP;IACH,CAhEI;;IAiELmC,YAAY,CAACb,aAAD,EAAgBY,UAAhB,EAA4BD,OAA5B,EAAqC;MAC7C,KAAK,IAAIO,IAAI,CAAb,EAAgBA,IAAIlB,aAApB,EAAmCkB,CAAC,EAApC,EAAwC;QACxCN,UAAU,CAACI,IAAX,CAAgBL,OAAhB;QACA,KAAKzB,QAAL,CAAc8B,IAAd,CAAmBL,OAAnB;QACAA,OAAM,IAAK,CAAX;MACA;IACH,CAvEI;;IAwELG,QAAQ,CAACF,UAAD,EAAa;MACjB,MAAMO,GAAE,GAAIP,UAAU,CAACG,MAAvB;MACA,MAAMK,QAAO,GAAI,IAAID,GAArB;;MACA,IAAIA,GAAE,IAAK,CAAP,IAAYA,GAAE,GAAI,CAAtB,EAAyB;QACrB,KAAK,IAAIE,IAAI,CAAb,EAAgBA,KAAKD,QAArB,EAA+BC,CAAC,EAAhC,EAAoC;UAChCT,UAAU,CAACI,IAAX,CAAgBK,CAAhB;UACA,IAAI,KAAKlC,WAAL,CAAiB4B,MAAjB,GAA0BK,QAA9B,EAAwC,KAAKjC,WAAL,CAAiB6B,IAAjB,CAAsBK,CAAtB;QAC5C;MACJ;IACH,CAjFI;;IAkFLC,YAAY,CAACC,CAAD,EAAI;MACZ,IAAIA,MAAM,MAAV,EAAkB;QAClB,KAAK3C,YAAL,GAAoB,KAAKE,KAAL,GAAa,CAAjC;QACA,KAAKH,WAAL,GAAmB,KAAKE,IAAxB;;QACA,IAAI,KAAKC,KAAL,KAAe,CAAnB,EAAsB;UAClB,KAAKF,YAAL,GAAoB,EAApB;UACA,KAAKD,WAAL,GAAmB,KAAKE,IAAL,IAAa,CAAhC;QACJ;MACA,CAPA,MAOO;QACH,KAAKD,YAAL,GAAoB,KAAKE,KAAL,GAAa,CAAjC;QACA,KAAKH,WAAL,GAAmB,KAAKE,IAAxB;;QACA,IAAI,KAAKC,KAAL,KAAe,EAAnB,EAAuB;UACnB,KAAKF,YAAL,GAAoB,CAApB;UACA,KAAKD,WAAL,GAAmB,KAAKE,IAAL,IAAa,CAAhC;QACJ;MACJ;;MACA,MAAMgB,KAAI,GAAI,CAAC,KAAKlB,WAAN,EAAmB,KAAKC,YAAxB,CAAd;MACA,KAAKe,IAAL,CAAUE,KAAV;IACH,CApGI;;IAqGL2B,WAAW,CAACD,CAAD,EAAI;MACX,IAAIA,MAAM,MAAV,EAAkB;QACd,KAAK5C,WAAL,GAAmB,KAAKE,IAAL,GAAY,CAA/B;MACJ,CAFA,MAEO;QACH,KAAKF,WAAL,GAAmB,KAAKE,IAAL,GAAY,CAA/B;MACJ;;MACA,MAAMgB,KAAI,GAAI,CAAC,KAAKlB,WAAN,EAAmB,KAAKG,KAAxB,CAAd;MACA,KAAKa,IAAL,CAAUE,KAAV;IACH,CA7GI;;IA8GL4B,MAAM,CAACF,CAAD,EAAI;MACN,KAAK5C,WAAL,GAAmB,IAAIK,IAAJ,GAAWQ,WAAX,EAAnB;;MACA,IAAI+B,MAAM,OAAV,EAAmB;QACf,KAAK3C,YAAL,GAAoB,IAAII,IAAJ,GAAWS,QAAX,KAAwB,CAA5C;MACJ,CAFA,MAEO;QACH,KAAKb,YAAL,GAAoB2C,IAAI,CAAxB;MACJ;;MACA,MAAM1B,KAAI,GAAI,CAAC,KAAKlB,WAAN,EAAmB,KAAKC,YAAxB,CAAd;MACA,KAAKe,IAAL,CAAUE,KAAV;IACH,CAvHI;;IAwHL6B,eAAe,CAAChB,GAAD,EAAM;MACjB,OAAO,KAAKiB,MAAL,CAAYC,KAAZ,CAAkBC,KAAlB,CAAwBC,MAAxB,CAA+BC,IAAG,IAAK;QAC1C,MAAMC,QAAO,GAAI,IAAIhD,IAAJ,CAAS+C,IAAI,CAACE,SAAd,CAAjB;QACA,MAAMC,aAAY,GAAIF,QAAQ,CAAC/C,OAAT,OAAuByB,GAA7C;QACA,MAAMyB,cAAa,GAAIH,QAAQ,CAACvC,QAAT,OAAwB,KAAKX,KAAL,GAAa,CAA5D;QACA,MAAMsD,aAAY,GAAIJ,QAAQ,CAACxC,WAAT,OAA2B,KAAKX,IAAtD;QACA,OAAOqD,aAAY,IAAKC,cAAjB,IAAmCC,aAA1C;MACH,CANM,CAAP;IAOH,CAhII;;IAiILC,WAAW,CAAC3B,GAAD,EAAM4B,GAAN,EAAW;MAClB,OACK,KAAKpD,QAAL,CAAc+B,OAAd,CAAsBP,GAAtB,IAA6B,CAAC,CAA9B,IAAmC4B,GAAE,GAAI,CAA1C,IACC,KAAKnD,WAAL,CAAiB8B,OAAjB,CAAyBP,GAAzB,IAAgC,CAAC,CAAjC,IAAsC4B,GAAE,GAAI,CAFjD;IAIJ;;EAtIK;AAlDE,CAAf","names":["Control","components","data","days","months","dates","currentYear","currentMonth","year","month","currentDate","Date","getDate","prevDate","previewDate","computed","monthToString","isCurrentDate","status","getFullYear","getMonth","created","init","methods","param","calendarDate","date","monthFirstDay","monthLastDate","prevMonthLastDate","getFirstDayLastDate","getDaysOfMonth","firstDay","getDay","lastDate","lastMonth","prevLastDate","day","prevDay","daysOfWeek","getPrevDates","padDates","length","push","indexOf","j","len","leftDays","i","controlMonth","p","controlYear","skipBy","getMatchedTodos","$store","state","todos","filter","todo","todoDate","createdAt","isDateMatched","isMonthMatched","isYearMathced","isPrevDates","idx"],"sourceRoot":"","sources":["C:\\Users\\w2580\\OneDrive\\문서\\GitHub\\MyToDo\\src\\components\\TodoCalendar\\TodoCalendar.vue"],"sourcesContent":["<template>\r\n    <!-- <main\r\n        class=\"container flex flex-row flex-wrap w-full h-auto justify-around items-center\"\r\n    > -->\r\n    <main>\r\n    <Control @skip-by=\"skipBy\" />\r\n    <!-- <section\r\n        class=\"calendar-wrapper flex flex-col justify-center items-center rounded border border-solid bg-gray-200 h-full cal-wrapper m-1\"\r\n    > -->\r\n    <section>\r\n        <!-- <div\r\n            class=\"flex flex-row justify-around items-center w-full h-12 text-lg bg-primary-lightmoonlight\"\r\n        > -->\r\n        <div>\r\n            <!-- header-arrow cursor-pointe -->\r\n            \r\n            <i class=\"bi bi-caret-left-fill\"\r\n                @click=\"controlMonth('prev')\"\r\n            ></i>\r\n            <i class=\"bi bi-caret-left\"\r\n                @click=\"controlYear('prev')\"\r\n            ></i>\r\n\r\n            <h1 class=\"font-bold\">{{ monthToString }}</h1>\r\n            <span>{{ year }}</span>\r\n            \r\n            <i class=\"bi bi-caret-right\"\r\n                @click=\"controlMonth('next')\"\r\n            ></i>\r\n            <i class=\"bi bi-caret-right-fill\"\r\n                @click=\"controlYear('next')\"\r\n            ></i>\r\n        </div>\r\n            <table> <!--class=\"w-full h-auto\"-->\r\n                <thead> <!--class=\"flex w-full h-12 justify-around items-center\"-->\r\n                    <th v-for=\"day in days\" :key=\"day\">{{ day }}</th>\r\n                </thead> \r\n                <tbody>\r\n                    <tr\r\n                        v-for=\"(date, idx) in dates\"\r\n                        :key=\"idx\"\r\n                    > <!--class=\"flex w-full h-12 justify-around items-center mb-3\"-->\r\n                    <td\r\n                        v-for=\"(day, index) in date\"\r\n                        :key=\"index\"\r\n                        :class=\"{\r\n                        'selected-date': day === currentDate && isCurrentDate,\r\n                        'prev-dates': isPrevDates(day, idx)\r\n                        }\"\r\n                    > <!--class=\"w-12 h-12 flex flex-col justify-center items-center hover-date rounded-full\"-->\r\n                        <div>\r\n                            {{ day }}\r\n                        </div><!--class=\"dateOnly w-full flex items-center justify-center\"-->\r\n                        <div\r\n                            v-if=\"getMatchedTodos(day).length > 0 && !isPrevDates(day, idx)\"\r\n                        ><!--class=\"markOnly w-full flex flex-row items-center justify-center\"-->\r\n                        <!-- <div\r\n                            v-for=\"(todo, idx) in getMatchedTodos(day).slice(0, 3)\"\r\n                            :key=\"idx\"\r\n                            class=\"todo-dot text-primary-blue\"\r\n                        >\r\n                            <font-awesome-icon\r\n                            icon=\"circle-notch\"\r\n                            v-if=\"todo.createdAt && !todo.completedAt\"\r\n                            class=\"text-xs\"\r\n                            />\r\n                            <font-awesome-icon\r\n                            icon=\"circle\"\r\n                            v-if=\"todo.createdAt && todo.completedAt\"\r\n                            class=\"text-xs\"\r\n                            />\r\n                        </div> -->\r\n                        </div>\r\n                    </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </section>\r\n    </main>\r\n</template>\r\n\r\n<script>\r\nimport Control from \"./TodoCalendarControl.vue\";\r\nexport default {\r\n    components: {\r\n        Control\r\n    },\r\n    data() {\r\n        return {\r\n            days: [\"SUN\", \"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"],\r\n            months: [\r\n            \"January\",\r\n            \"February\",\r\n            \"March\",\r\n            \"April\",\r\n            \"May\",\r\n            \"June\",\r\n            \"July\",\r\n            \"August\",\r\n            \"September\",\r\n            \"October\",\r\n            \"November\",\r\n            \"December\"\r\n            ],\r\n            dates: [],\r\n            currentYear: 0,\r\n            currentMonth: 0,\r\n            year: 0,\r\n            month: 0,\r\n            currentDate: new Date().getDate(),\r\n            prevDate: [],\r\n            previewDate: []\r\n        };\r\n    },\r\n    computed: {\r\n        monthToString: function() {\r\n            return this.months[this.month - 1];\r\n        },\r\n        isCurrentDate: function() {\r\n            let status = false;\r\n            if (this.currentYear === 0 && this.currentMonth === 0) {\r\n            status = true;\r\n            } else {\r\n            status =\r\n                this.currentYear === new Date().getFullYear() &&\r\n                this.currentMonth === new Date().getMonth() + 1;\r\n            }\r\n            return status;\r\n        }\r\n    },\r\n    created() {\r\n        this.init();\r\n    },\r\n    methods: {\r\n        init(param) {\r\n            if (param) {\r\n                this.year = param[0];\r\n                this.month = param[1];\r\n                this.calendarDate();\r\n            } else {\r\n                const date = new Date();\r\n                this.year = date.getFullYear();\r\n                this.month = date.getMonth() + 1;\r\n                this.calendarDate();\r\n            }\r\n        },\r\n        calendarDate() {\r\n            const [\r\n                monthFirstDay,\r\n                monthLastDate,\r\n                prevMonthLastDate\r\n            ] = this.getFirstDayLastDate(this.year, this.month);\r\n            this.dates = this.getDaysOfMonth(\r\n                monthFirstDay,\r\n                monthLastDate,\r\n                prevMonthLastDate\r\n            );\r\n        },\r\n        getFirstDayLastDate(year, month) {\r\n            const firstDay = new Date(year, month - 1, 1).getDay();\r\n            const lastDate = new Date(year, month, 0).getDate();\r\n            let lastMonth = month - 1;\r\n            if (month === 1) {\r\n                lastMonth = 12;\r\n                year -= 1;\r\n            }\r\n            const prevLastDate = new Date(year, lastMonth, 0).getDate();\r\n            return [firstDay, lastDate, prevLastDate];\r\n        },\r\n        getDaysOfMonth(monthFirstDay, monthLastDate, prevMonthLastDate) {\r\n            let day = 1;\r\n            let prevDay = prevMonthLastDate - monthFirstDay + 1;\r\n            let dates = [];\r\n            let daysOfWeek = [];\r\n            while (day <= monthLastDate) {\r\n                if (day === 1) {\r\n                    this.getPrevDates(monthFirstDay, daysOfWeek, prevDay);\r\n                    this.padDates(daysOfWeek);\r\n                }\r\n                if (daysOfWeek.length === 7) {\r\n                    dates.push(daysOfWeek);\r\n                    day = daysOfWeek[daysOfWeek.length - 1];\r\n                    daysOfWeek = [];\r\n                } else if (\r\n                    daysOfWeek.length < 7 &&\r\n                    daysOfWeek.indexOf(monthLastDate) > -1\r\n                ) {\r\n                    this.padDates(daysOfWeek);\r\n                    dates.push(daysOfWeek);\r\n                    break;\r\n                }\r\n                day++;\r\n                if (daysOfWeek.length <= 7) {\r\n                    daysOfWeek.push(day);\r\n                }\r\n            }\r\n            return dates;\r\n        },\r\n        getPrevDates(monthFirstDay, daysOfWeek, prevDay) {\r\n            for (let j = 0; j < monthFirstDay; j++) {\r\n            daysOfWeek.push(prevDay);\r\n            this.prevDate.push(prevDay);\r\n            prevDay += 1;\r\n            }\r\n        },\r\n        padDates(daysOfWeek) {\r\n            const len = daysOfWeek.length;\r\n            const leftDays = 7 - len;\r\n            if (len >= 0 && len < 7) {\r\n                for (let i = 1; i <= leftDays; i++) {\r\n                    daysOfWeek.push(i);\r\n                    if (this.previewDate.length < leftDays) this.previewDate.push(i);\r\n                }\r\n            }\r\n        },\r\n        controlMonth(p) {\r\n            if (p === \"prev\") {\r\n            this.currentMonth = this.month - 1;\r\n            this.currentYear = this.year;\r\n            if (this.month === 1) {\r\n                this.currentMonth = 12;\r\n                this.currentYear = this.year -= 1;\r\n            }\r\n            } else {\r\n                this.currentMonth = this.month + 1;\r\n                this.currentYear = this.year;\r\n                if (this.month === 12) {\r\n                    this.currentMonth = 1;\r\n                    this.currentYear = this.year += 1;\r\n                }\r\n            }\r\n            const param = [this.currentYear, this.currentMonth];\r\n            this.init(param);\r\n        },\r\n        controlYear(p) {\r\n            if (p === \"prev\") {\r\n                this.currentYear = this.year - 1;\r\n            } else {\r\n                this.currentYear = this.year + 1;\r\n            }\r\n            const param = [this.currentYear, this.month];\r\n            this.init(param);\r\n        },\r\n        skipBy(p) {\r\n            this.currentYear = new Date().getFullYear();\r\n            if (p === \"today\") {\r\n                this.currentMonth = new Date().getMonth() + 1;\r\n            } else {\r\n                this.currentMonth = p + 1;\r\n            }\r\n            const param = [this.currentYear, this.currentMonth];\r\n            this.init(param);\r\n        },\r\n        getMatchedTodos(day) {\r\n            return this.$store.state.todos.filter(todo => {\r\n                const todoDate = new Date(todo.createdAt);\r\n                const isDateMatched = todoDate.getDate() === day;\r\n                const isMonthMatched = todoDate.getMonth() === this.month - 1;\r\n                const isYearMathced = todoDate.getFullYear() === this.year;\r\n                return isDateMatched && isMonthMatched && isYearMathced;\r\n            });\r\n        },\r\n        isPrevDates(day, idx) {\r\n            return (\r\n                (this.prevDate.indexOf(day) > -1 && idx < 1) ||\r\n                (this.previewDate.indexOf(day) > -1 && idx > 1)\r\n            );\r\n        }\r\n    }\r\n};\r\n</script>"]},"metadata":{},"sourceType":"module"}