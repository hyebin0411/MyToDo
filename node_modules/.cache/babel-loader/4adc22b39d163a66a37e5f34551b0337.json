{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, vModelCheckbox as _vModelCheckbox, createElementVNode as _createElementVNode, withDirectives as _withDirectives, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"list\"\n};\nconst _hoisted_2 = {\n  for: \"list_item_check\"\n};\nconst _hoisted_3 = {\n  class: \"list_item_content\"\n};\nconst _hoisted_4 = {\n  class: \"list_item_date\"\n};\nconst _hoisted_5 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"ul\", _hoisted_1, [_createCommentVNode(\" <li class='list_item'>\\r\\n            <input type=\\\"checkbox\\\" id=\\\"list_itme_1\\\"/>\\r\\n            <label for='list_item_1'>\\r\\n                <p class='list_text'>Hello Boy</p>\\r\\n            </label>\\r\\n            <p class='list_date'>8/16</p>\\r\\n            <button class='list_delete'>delete</button>\\r\\n        </li> \"), _createCommentVNode(\" <li v-for=\\\"item in TaskList\\\" v-bind:key=\\\"item.id\\\">\\r\\n            ID . {{ item.id }} content . {{ item.content }} date . {{ item.date }}\\r\\n        </li> \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.TaskList, (item, index) => {\n    return _openBlock(), _createElementBlock(\"li\", {\n      class: \"list_item\",\n      key: item.id\n    }, [_withDirectives(_createElementVNode(\"input\", {\n      type: \"checkbox\",\n      id: \"list_item_check\",\n      \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.val = $event)\n    }, null, 512\n    /* NEED_PATCH */\n    ), [[_vModelCheckbox, _ctx.val]]), _createElementVNode(\"label\", _hoisted_2, [_createElementVNode(\"p\", _hoisted_3, _toDisplayString(item.content), 1\n    /* TEXT */\n    )]), _createElementVNode(\"p\", _hoisted_4, _toDisplayString(item.date), 1\n    /* TEXT */\n    ), _createElementVNode(\"p\", null, \"item.id : \" + _toDisplayString(item.id), 1\n    /* TEXT */\n    ), _createElementVNode(\"button\", {\n      class: \"list_item_delete\",\n      onClick: $event => $options.deleteList(index)\n    }, \"delete\", 8\n    /* PROPS */\n    , _hoisted_5)]);\n  }), 128\n  /* KEYED_FRAGMENT */\n  )), _createElementVNode(\"p\", null, _toDisplayString(_ctx.val), 1\n  /* TEXT */\n  )]);\n}","map":{"version":3,"mappings":";;EACQA,KAAK,EAAC;;;EAkBKC,GAAG,EAAC;;;EACJD,KAAK,EAAC;;;EAGVA,KAAK,EAAC;;;;uBAtBjBE,oBA6BK,IA7BL,cA6BK,CA3BDC,4VA2BC,EAlBDA,sLAkBC,qBAdDD,oBAYKE,SAZL,EAYK,IAZL,EAYKC,YAZyCC,aAYzC,EAZiD,CAAxBC,IAAwB,EAAlBC,KAAkB,KAAb;yBAAzCN,oBAYK,IAZL,EAYK;MAZDF,KAAK,EAAC,WAYL;MAZ0DS,GAAG,EAAEF,IAAI,CAACG;IAYpE,CAZL,mBACIC,oBAA4D,OAA5D,EAA4D;MAArDC,IAAI,EAAC,UAAgD;MAArCF,EAAE,EAAC,iBAAkC;iEAAPJ,WAAGO;IAAI,CAA5D;;IAAA,sBAAqDP,aAErDK,oBAEQ,OAFR,cAEQ,CADJA,oBAAmD,GAAnD,cAAmDG,iBAAnBP,IAAI,CAACQ,OAAc,CAAnD,EAA4C;IAAA;IAA5C,CACI,CAFR,GAIAJ,oBAA6C,GAA7C,cAA6CG,iBAAhBP,IAAI,CAACS,IAAW,CAA7C,EAAsC;IAAA;IAAtC,GAEAL,oBAA4B,GAA5B,EAA4B,IAA5B,EAAG,eAAUG,iBAAEP,IAAI,CAACG,EAAP,CAAb,EAAsB;IAAA;IAAtB,GAEAC,oBAA+E,QAA/E,EAA+E;MAAvEX,KAAK,EAAC,kBAAiE;MAAzCiB,OAAK,YAAEC,oBAAWV,KAAX;IAAkC,CAA/E,EAAgE,QAAhE,EAAsE;IAAA;IAAtE,EAAsEW,UAAtE,EAXJ;GAYK,CAZL;;EAAA,CAcC,GADDR,oBAAgB,GAAhB,EAAgB,IAAhB,EAAgBG,iBAAVR,QAAU,CAAhB,EAAS;EAAA;EAAT,CACC,CA7BL","names":["class","for","_createElementBlock","_createCommentVNode","_Fragment","_renderList","_ctx","item","index","key","id","_createElementVNode","type","$event","_toDisplayString","content","date","onClick","$options","_hoisted_5"],"sourceRoot":"","sources":["C:\\Users\\w2580\\OneDrive\\문서\\GitHub\\MyToDo\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n    <ul class='list'>\r\n\r\n        <!-- <li class='list_item'>\r\n            <input type=\"checkbox\" id=\"list_itme_1\"/>\r\n            <label for='list_item_1'>\r\n                <p class='list_text'>Hello Boy</p>\r\n            </label>\r\n            <p class='list_date'>8/16</p>\r\n            <button class='list_delete'>delete</button>\r\n        </li> -->\r\n\r\n        <!-- <li v-for=\"item in TaskList\" v-bind:key=\"item.id\">\r\n            ID . {{ item.id }} content . {{ item.content }} date . {{ item.date }}\r\n        </li> -->\r\n\r\n        <li class=\"list_item\" v-for=\"(item, index) in TaskList\" v-bind:key=\"item.id\">\r\n            <input type=\"checkbox\" id=\"list_item_check\" v-model=\"val\" />\r\n\r\n            <label for=\"list_item_check\">\r\n                <p class=\"list_item_content\">{{ item.content }}</p>\r\n            </label>\r\n\r\n            <p class=\"list_item_date\">{{ item.date }}</p>\r\n\r\n            <p>item.id : {{item.id}}</p>\r\n\r\n            <button class=\"list_item_delete\" v-on:click=\"deleteList(index)\">delete</button>\r\n        </li>\r\n        <p>{{ val }}</p>\r\n    </ul>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props : ['p_content', 'p_date'],\r\n    data : function(){\r\n        return{\r\n            val : [],\r\n            notdelete : true,\r\n            TaskList : [\r\n                {id : 1, check : false,  content : \"Hey Boy!\", date:\"8/16 Tue.\"},\r\n                {id : 2, check : false,  content : \"Hello\", date:\"8/16 Tue.\"},\r\n                {id : 3, check : false,  content : \"Hi hani\", date:\"8/16 Tue.\"}\r\n                \r\n            ]\r\n        }\r\n    },\r\n    beforeCreate(){\r\n        console.log(\"beforeCreate\")\r\n    },\r\n    created(){\r\n        console.log(\"created\")\r\n    },\r\n    beforeMount(){\r\n        console.log(\"beforeMount\")\r\n    }\r\n    ,\r\n    mounted(){\r\n        console.log(\"mounted\")\r\n    },\r\n    beforeUpdate(){\r\n        console.log(\"\\n===============beforeUpdate...ing===================\")\r\n        if(this.notdelete){\r\n            this.doAdd();\r\n            console.log(\"-----------------doAdd()...ed--------------------------\")\r\n        }\r\n        this.notdelete = true;\r\n    },\r\n    updated(){\r\n        console.log(\"\\n===============updated...ing===================\\n\")\r\n    },  \r\n    methods : { \r\n        doAdd : function(){\r\n            console.log(\"\\n-----------------doAdd()...ing1--------------------------\")\r\n            var max = this.TaskList.reduce(function(a,b){\r\n                return a>b.id ? a:b.id\r\n            }, 0)\r\n            console.log(\"-----------------doAdd()...ing2--------------------------\")\r\n            this.TaskList.push({\r\n                id : max+1, check : false, content : this.p_content, date : this.p_date\r\n            })\r\n            console.log(\"-----------------doAdd()...ing3--------------------------\\n\")\r\n        },\r\n        deleteList : function(index){\r\n            // console.log(\"index : \"+index)\r\n            this.TaskList.splice(index, 1);\r\n            this.notdelete = false;\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n.list_item{\r\n    display: flex;\r\n    justify-content: space-between;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}