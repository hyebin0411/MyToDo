{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, resolveComponent as _resolveComponent, createVNode as _createVNode, toDisplayString as _toDisplayString, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, withCtx as _withCtx, createBlock as _createBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"first-div\"\n};\nconst _hoisted_2 = {\n  for: \"list_item_check\"\n};\nconst _hoisted_3 = {\n  key: 0,\n  class: \"list_item_content\"\n};\nconst _hoisted_4 = {\n  key: 1\n};\nconst _hoisted_5 = {\n  class: \"list_item_date\"\n};\n\nconst _hoisted_6 = /*#__PURE__*/_createTextVNode(\"delete\");\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_b_form_checkbox = _resolveComponent(\"b-form-checkbox\");\n\n  const _component_b_button = _resolveComponent(\"b-button\");\n\n  const _component_b_list_group_item = _resolveComponent(\"b-list-group-item\");\n\n  const _component_b_list_group = _resolveComponent(\"b-list-group\");\n\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_b_list_group, {\n    class: \"list_group\"\n  }, {\n    default: _withCtx(() => [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList(_ctx.TaskList, (item, index) => {\n      return _openBlock(), _createBlock(_component_b_list_group_item, {\n        class: \"list_item\",\n        style: {\n          \"display\": \"flex\"\n        },\n        key: item.id\n      }, {\n        default: _withCtx(() => [_createVNode(_component_b_form_checkbox, {\n          id: \"list_item_check\",\n          value: item.id,\n          modelValue: _ctx.val,\n          \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => _ctx.val = $event),\n          onChange: _cache[1] || (_cache[1] = $event => $options.getcheckbox($event))\n        }, null, 8\n        /* PROPS */\n        , [\"value\", \"modelValue\"]), _createElementVNode(\"label\", _hoisted_2, [_ctx.font_no ? (_openBlock(), _createElementBlock(\"p\", _hoisted_3, _toDisplayString(item.content), 1\n        /* TEXT */\n        )) : (_openBlock(), _createElementBlock(\"p\", _hoisted_4, _toDisplayString(item.content), 1\n        /* TEXT */\n        ))]), _createElementVNode(\"p\", _hoisted_5, _toDisplayString(item.date), 1\n        /* TEXT */\n        ), _createElementVNode(\"p\", null, \"item.id : \" + _toDisplayString(item.id), 1\n        /* TEXT */\n        ), _createVNode(_component_b_button, {\n          class: \"list_item_delete\",\n          onClick: $event => $options.deleteList(index),\n          variant: \"outline-danger\"\n        }, {\n          default: _withCtx(() => [_hoisted_6]),\n          _: 2\n          /* DYNAMIC */\n\n        }, 1032\n        /* PROPS, DYNAMIC_SLOTS */\n        , [\"onClick\"])]),\n        _: 2\n        /* DYNAMIC */\n\n      }, 1024\n      /* DYNAMIC_SLOTS */\n      );\n    }), 128\n    /* KEYED_FRAGMENT */\n    ))]),\n    _: 1\n    /* STABLE */\n\n  })]), _createCommentVNode(\" <li class='list_item'>\\r\\n            <input type=\\\"checkbox\\\" id=\\\"list_itme_1\\\"/>\\r\\n            <label for='list_item_1'>\\r\\n                <p class='list_text'>Hello Boy</p>\\r\\n            </label>\\r\\n            <p class='list_date'>8/16</p>\\r\\n            <button class='list_delete'>delete</button>\\r\\n        </li> \"), _createCommentVNode(\" <li v-for=\\\"item in TaskList\\\" v-bind:key=\\\"item.id\\\">\\r\\n            ID . {{ item.id }} content . {{ item.content }} date . {{ item.date }}\\r\\n        </li> \")], 2112\n  /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;EACSA,KAAK,EAAC;;;EAQQC,GAAG,EAAC;;;;EACWD,KAAK,EAAC;;;;;;EAGzBA,KAAK,EAAC;;;iDAEkF;;;;;;;;;;;6DAdvGE,oBAiBM,KAjBN,cAiBM,CAhBFC,aAeeC,uBAff,EAee;IAfDJ,KAAK,EAAC;EAeL,CAff,EAAgC;sBACgC,MAAiC,oBAA7FK,oBAaoBC,SAbpB,EAaoB,IAbpB,EAaoBC,YAbgEC,aAahE,EAbwE,CAAxBC,IAAwB,EAAlBC,KAAkB,KAAb;2BAA/EC,aAaoBC,4BAbpB,EAaoB;QAbDZ,KAAK,EAAC,WAaL;QAbiBa,KAAsB,EAAtB;UAAA;QAAA,CAajB;QAbiFC,GAAG,EAAEL,IAAI,CAACM;MAa3F,CAbpB;0BACI,MAIoD,CAJpDZ,aAIoDa,0BAJpD,EAIoD;UAHhDD,EAAE,EAAC,iBAG6C;UAFzCE,KAAK,EAAER,IAAI,CAACM,EAE6B;sBADvCP,QACuC;qEADvCA,WAAGU,OACoC;UAA/CC,QAAM,sCAAEC,qBAAYF,MAAZ,CAAF;QAAyC,CAJpD;;QAAA,0BAIoD,EACpDhB,oBAGQ,OAHR,cAGQ,CAFKM,8BAATH,oBAAkE,GAAlE,cAAkEgB,iBAAnBZ,IAAI,CAACa,OAAc,CAAlE,EAA2D;QAAA;QAA3D,oBACAjB,oBAAgC,GAAhC,EAAgCkB,UAAhC,EAAgCF,iBAAnBZ,IAAI,CAACa,OAAc,CAAhC,EAAyB;QAAA;QAAzB,EACI,CAHR,CADoD,EAKpDpB,oBAA6C,GAA7C,cAA6CmB,iBAAhBZ,IAAI,CAACe,IAAW,CAA7C,EAAsC;QAAA;QAAtC,CALoD,EAMpDtB,oBAA4B,GAA5B,EAA4B,IAA5B,EAAG,eAAUmB,iBAAEZ,IAAI,CAACM,EAAP,CAAb,EAAsB;QAAA;QAAtB,CANoD,EAOpDZ,aAA4GsB,mBAA5G,EAA4G;UAAlGzB,KAAK,EAAC,kBAA4F;UAApE0B,OAAK,YAAEN,oBAAWV,KAAX,CAA6D;UAA1CiB,OAAO,EAAC;QAAkC,CAA5G;4BAA2F,MAAM;;;;SAAjG;;QAAA,cAPoD;;;;OALxD;;MAAA;KAaoB,CAbpB;;IAAA,CAA6F,GADjE;;;;EAAA,CAAhC,CAgBE,CAjBN,GAkBAC,8VASIA","names":["class","for","_createElementVNode","_createVNode","_component_b_list_group","_createElementBlock","_Fragment","_renderList","_ctx","item","index","_createBlock","_component_b_list_group_item","style","key","id","_component_b_form_checkbox","value","$event","onChange","$options","_toDisplayString","content","_hoisted_4","date","_component_b_button","onClick","variant","_createCommentVNode"],"sourceRoot":"","sources":["C:\\Users\\w2580\\OneDrive\\문서\\GitHub\\MyToDo\\src\\components\\TodoList.vue"],"sourcesContent":["<template>\r\n    <div class=\"first-div\">\r\n        <b-list-group class='list_group'>\r\n            <b-list-group-item class='list_item' style=\"display: flex;\" v-for=\"(item, index) in TaskList\" v-bind:key=\"item.id\">\r\n                <b-form-checkbox \r\n                    id=\"list_item_check\" \r\n                    v-bind:value=\"item.id\" \r\n                    v-model=\"val\" \r\n                    @change=\"getcheckbox($event)\"></b-form-checkbox>\r\n                <label for=\"list_item_check\">\r\n                    <p v-if=\"font_no\" class=\"list_item_content\">{{ item.content }}</p>\r\n                    <p v-else>{{ item.content }}</p>\r\n                </label>\r\n                <p class=\"list_item_date\">{{ item.date }}</p>\r\n                <p>item.id : {{item.id}}</p>\r\n                <b-button class=\"list_item_delete\" v-on:click=\"deleteList(index)\" variant=\"outline-danger\">delete</b-button>\r\n            </b-list-group-item>\r\n        </b-list-group>\r\n    </div>\r\n    <!-- <li class='list_item'>\r\n            <input type=\"checkbox\" id=\"list_itme_1\"/>\r\n            <label for='list_item_1'>\r\n                <p class='list_text'>Hello Boy</p>\r\n            </label>\r\n            <p class='list_date'>8/16</p>\r\n            <button class='list_delete'>delete</button>\r\n        </li> -->\r\n\r\n        <!-- <li v-for=\"item in TaskList\" v-bind:key=\"item.id\">\r\n            ID . {{ item.id }} content . {{ item.content }} date . {{ item.date }}\r\n        </li> -->\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n    props : ['p_content', 'p_date', 'listAllClean'],\r\n    watch : {\r\n        listAllClean(){\r\n            this.TaskList = [];\r\n            console.log(\"watch : listAllClean start\")\r\n            this.notdelete = false;\r\n        },\r\n        TaskList : {\r\n            handler() {\r\n                this.$emit('listlength', this.TaskList.length)\r\n                console.log(\"List.watch : TaskList() \"+this.TaskList.length)\r\n            },\r\n            deep: true\r\n        }\r\n    },\r\n    data : function(){\r\n        return{\r\n            val : [],\r\n            notdelete : true,\r\n            font_no : false,\r\n            TaskList : [\r\n                {id : 1, check : false,  content : \"Hey Boy!\", date:\"8/16 Tue.\"},\r\n                {id : 2, check : false,  content : \"Hello\", date:\"8/16 Tue.\"},\r\n                {id : 3, check : false,  content : \"Hi hani\", date:\"8/16 Tue.\"}\r\n                \r\n            ]\r\n        }\r\n    },\r\n    beforeCreate(){\r\n        console.log(\"beforeCreate\")\r\n    },\r\n    created(){\r\n        console.log(\"created\")\r\n        console.log(\"List.created : TaskList() \"+this.TaskList.length)\r\n        console.log(\"List.created : TaskList \"+JSON.stringify(this.TaskList))\r\n        this.$emit('listlength', this.TaskList.length)\r\n    },\r\n    beforeMount(){\r\n        console.log(\"beforeMount\")\r\n    }\r\n    ,\r\n    mounted(){\r\n        console.log(\"mounted\")\r\n    },\r\n    beforeUpdate(){\r\n        console.log(\"\\n===============beforeUpdate...ing===================\")\r\n        console.log(\"delete : \"+this.notdelete)\r\n        if(this.p_content == \"\" && this.notdelete){\r\n            alert(\"공백은 당근이 될 수 없습니다\")\r\n        }\r\n\r\n        if(this.notdelete && this.p_content != \"\"){\r\n            this.doAdd();\r\n            console.log(\"-----------------doAdd()...end--------------------------\")\r\n        }\r\n        this.notdelete = true;\r\n        console.log(\"font_no : \" +this.font_no)\r\n        this.font_no = false;\r\n        console.log(\"trans_font_no : \" +this.font_no)\r\n    },\r\n    updated(){\r\n        console.log(\"\\n===============updated...ing===================\\n\")\r\n        console.log(this.val + \"\\n\")\r\n    },  \r\n    methods : { \r\n        doAdd : function(){\r\n            console.log(\"\\n-----------------doAdd()...start--------------------------\")\r\n            var max = this.TaskList.reduce(function(a,b){\r\n                return a>b.id ? a:b.id\r\n            }, 0)\r\n            this.TaskList.push({\r\n                id : max+1, check : false, content : this.p_content, date : this.p_date\r\n            })\r\n            //console.log(\"TaskList_length \"+this.TaskList.length)\r\n        },\r\n        deleteList : function(index){\r\n            this.$nextTick(function(){\r\n                this.TaskList.splice(index, 1);\r\n                this.notdelete = false;\r\n                console.log(\"deleteList tick end\")\r\n            });\r\n            // this.TaskList.splice(index, 1);\r\n            // this.notdelete = false;\r\n            //this.$forceUpdate();\r\n            console.log(\"deleteList end\")\r\n        },\r\n        getcheckbox : function(e){\r\n            this.notdelete = false;\r\n            this.font_no = true;\r\n            console.log(\"getcheckbox start\"+e)\r\n            console.log(\"font_no : \" +this.font_no)\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style>\r\n/* .list{\r\n    margin-top: 20px;\r\n}\r\n.list_item{\r\n    display: flex;\r\n    justify-content: space-between;\r\n    margin-top: 10px;\r\n}\r\n.list_item_delete{\r\n    height: 32px;\r\n}\r\n.list_item_content{\r\n    text-decoration: line-through;\r\n} */\r\n.first-div{\r\n    margin-top: 20px;\r\n}\r\n.list_group{ \r\n    width: 90%;\r\n    margin: 0 auto;\r\n}\r\n.list_item{\r\n    justify-content: space-between;\r\n    margin-top: 0px;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}