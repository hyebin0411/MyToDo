import type { Booleanish } from '../types';
declare const _sfc_main: import("vue").DefineComponent<{
    alt: {
        type: StringConstructor;
        required: false;
        default: undefined;
    };
    blank: {
        type: null;
        required: false;
        default: boolean;
    };
    blankColor: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    block: {
        type: null;
        required: false;
        default: boolean;
    };
    center: {
        type: null;
        required: false;
        default: boolean;
    };
    fluid: {
        type: null;
        required: false;
        default: boolean;
    };
    fluidGrow: {
        type: null;
        required: false;
        default: boolean;
    };
    height: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
    };
    left: {
        type: null;
        required: false;
        default: boolean;
    };
    right: {
        type: null;
        required: false;
        default: boolean;
    };
    rounded: {
        type: (StringConstructor | BooleanConstructor)[];
        required: false;
        default: boolean;
    };
    sizes: {
        type: (StringConstructor | ArrayConstructor)[];
        required: false;
    };
    src: {
        type: StringConstructor;
        required: false;
    };
    srcset: {
        type: (StringConstructor | ArrayConstructor)[];
        required: false;
    };
    thumbnail: {
        type: null;
        required: false;
        default: boolean;
    };
    width: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
    };
}, {
    props: {
        alt: string;
        blank: Booleanish;
        blankColor: string;
        block: Booleanish;
        center: Booleanish;
        fluid: Booleanish;
        fluidGrow: Booleanish;
        height?: string | number | undefined;
        left: Booleanish;
        right: Booleanish;
        rounded: boolean | string;
        sizes?: string | string[] | undefined;
        src?: string | undefined;
        srcset?: string | string[] | undefined;
        thumbnail: Booleanish;
        width?: string | number | undefined;
    };
    blankBoolean: import("vue").ComputedRef<boolean>;
    blockBoolean: import("vue").ComputedRef<boolean>;
    centerBoolean: import("vue").ComputedRef<boolean>;
    fluidBoolean: import("vue").ComputedRef<boolean>;
    fluidGrowBoolean: import("vue").ComputedRef<boolean>;
    leftBoolean: import("vue").ComputedRef<boolean>;
    rightBoolean: import("vue").ComputedRef<boolean>;
    thumbnailBoolean: import("vue").ComputedRef<boolean>;
    BLANK_TEMPLATE: string;
    makeBlankImgSrc: (width: any, height: any, color: string) => string;
    attrs: import("vue").ComputedRef<{
        src: string | undefined;
        alt: string;
        width: number | undefined;
        height: number | undefined;
        srcset: string | undefined;
        sizes: string | undefined;
    }>;
    alignment: import("vue").ComputedRef<"float-start" | "float-end" | "mx-auto" | undefined>;
    classes: import("vue").ComputedRef<{
        [x: string]: boolean;
        'img-thumbnail': boolean;
        'img-fluid': boolean;
        'w-100': boolean;
        rounded: boolean;
        'd-block': boolean;
    }>;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, Record<string, any>, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    alt: {
        type: StringConstructor;
        required: false;
        default: undefined;
    };
    blank: {
        type: null;
        required: false;
        default: boolean;
    };
    blankColor: {
        type: StringConstructor;
        required: false;
        default: string;
    };
    block: {
        type: null;
        required: false;
        default: boolean;
    };
    center: {
        type: null;
        required: false;
        default: boolean;
    };
    fluid: {
        type: null;
        required: false;
        default: boolean;
    };
    fluidGrow: {
        type: null;
        required: false;
        default: boolean;
    };
    height: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
    };
    left: {
        type: null;
        required: false;
        default: boolean;
    };
    right: {
        type: null;
        required: false;
        default: boolean;
    };
    rounded: {
        type: (StringConstructor | BooleanConstructor)[];
        required: false;
        default: boolean;
    };
    sizes: {
        type: (StringConstructor | ArrayConstructor)[];
        required: false;
    };
    src: {
        type: StringConstructor;
        required: false;
    };
    srcset: {
        type: (StringConstructor | ArrayConstructor)[];
        required: false;
    };
    thumbnail: {
        type: null;
        required: false;
        default: boolean;
    };
    width: {
        type: (StringConstructor | NumberConstructor)[];
        required: false;
    };
}>>, {
    alt: string;
    rounded: string | boolean;
    left: any;
    right: any;
    center: any;
    block: any;
    fluid: any;
    blank: any;
    blankColor: string;
    fluidGrow: any;
    thumbnail: any;
}>;
export default _sfc_main;
